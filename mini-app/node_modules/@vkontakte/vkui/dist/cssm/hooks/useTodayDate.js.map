{"version":3,"sources":["../../../src/hooks/useTodayDate.ts"],"sourcesContent":["import * as React from 'react';\nimport { isSameDate } from '@vkontakte/vkjs';\nimport { startOfTomorrow } from '../lib/date';\nimport { useDOM } from '../lib/dom';\n\n/**\n * Опционально обновляемая дата сегодняшнего дня\n *\n * Дата - сегодня (в соответствии с системным временем)\n *\n * Часы, минуты, секунды, миллисекунды - произвольные\n *\n * @param listenDayChangesForUpdate - флаг по которому определяется, будет ли создаваться подписка на смену календарного дня\n */\nexport function useTodayDate(listenDayChangesForUpdate = false): Date {\n  const { document, window } = useDOM();\n  const [todayDate, setTodayDate] = React.useState(() => new Date());\n\n  React.useEffect(\n    function setupTodaysDateRecalculationListener() {\n      if (!listenDayChangesForUpdate || !document || !window) {\n        return;\n      }\n\n      let timeout: number | undefined = undefined;\n\n      const recalcTimeout = () => {\n        if (document.visibilityState === 'visible') {\n          const now = new Date();\n\n          const timeToDayChange = Number(startOfTomorrow()) - Number(now);\n\n          // Удаляем старый таймаут\n          window.clearTimeout(timeout);\n\n          // Создаем новый таймаут\n          timeout = window.setTimeout(() => {\n            setTodayDate(new Date());\n          }, timeToDayChange);\n\n          // Если todayDate не обновился в таймаут - обновить при заходе на вкладку\n          if (!isSameDate(todayDate, now)) {\n            setTodayDate(now);\n          }\n        }\n      };\n\n      recalcTimeout();\n\n      // Создаем слушатель visibilitychange, чтобы предотвратить пропуск обновления стейта после заморозки вкладки\n      // Если человек ее долго не трогал или закрывал крышку ноута и тп\n      // https://developer.chrome.com/blog/page-lifecycle-api/\n      document.addEventListener('visibilitychange', recalcTimeout);\n\n      return () => {\n        window.clearTimeout(timeout);\n        document.removeEventListener('visibilitychange', recalcTimeout);\n      };\n    },\n    [document, listenDayChangesForUpdate, todayDate, window],\n  );\n\n  return todayDate;\n}\n"],"names":["React","isSameDate","startOfTomorrow","useDOM","useTodayDate","listenDayChangesForUpdate","document","window","todayDate","setTodayDate","useState","Date","useEffect","setupTodaysDateRecalculationListener","timeout","undefined","recalcTimeout","visibilityState","now","timeToDayChange","Number","clearTimeout","setTimeout","addEventListener","removeEventListener"],"mappings":"AAAA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,eAAe,QAAQ,iBAAc;AAC9C,SAASC,MAAM,QAAQ,gBAAa;AAEpC;;;;;;;;CAQC,GACD,OAAO,SAASC,aAAaC,4BAA4B,KAAK;IAC5D,MAAM,EAAEC,QAAQ,EAAEC,MAAM,EAAE,GAAGJ;IAC7B,MAAM,CAACK,WAAWC,aAAa,GAAGT,MAAMU,QAAQ,CAAC,IAAM,IAAIC;IAE3DX,MAAMY,SAAS,CACb,SAASC;QACP,IAAI,CAACR,6BAA6B,CAACC,YAAY,CAACC,QAAQ;YACtD;QACF;QAEA,IAAIO,UAA8BC;QAElC,MAAMC,gBAAgB;YACpB,IAAIV,SAASW,eAAe,KAAK,WAAW;gBAC1C,MAAMC,MAAM,IAAIP;gBAEhB,MAAMQ,kBAAkBC,OAAOlB,qBAAqBkB,OAAOF;gBAE3D,yBAAyB;gBACzBX,OAAOc,YAAY,CAACP;gBAEpB,wBAAwB;gBACxBA,UAAUP,OAAOe,UAAU,CAAC;oBAC1Bb,aAAa,IAAIE;gBACnB,GAAGQ;gBAEH,yEAAyE;gBACzE,IAAI,CAAClB,WAAWO,WAAWU,MAAM;oBAC/BT,aAAaS;gBACf;YACF;QACF;QAEAF;QAEA,4GAA4G;QAC5G,iEAAiE;QACjE,wDAAwD;QACxDV,SAASiB,gBAAgB,CAAC,oBAAoBP;QAE9C,OAAO;YACLT,OAAOc,YAAY,CAACP;YACpBR,SAASkB,mBAAmB,CAAC,oBAAoBR;QACnD;IACF,GACA;QAACV;QAAUD;QAA2BG;QAAWD;KAAO;IAG1D,OAAOC;AACT"}