{"version":3,"sources":["../../../src/components/CarouselBase/CarouselViewPort.tsx"],"sourcesContent":["'use client';\n/* eslint-disable jsdoc/require-jsdoc */\n\nimport * as React from 'react';\nimport { type HasChildren, type HasRootRef } from '../../types';\nimport { type CustomTouchEvent, Touch } from '../Touch/Touch';\nimport { type BaseGalleryProps } from './types';\nimport styles from './CarouselBase.module.css';\n\ntype GalleryViewPortProps = Pick<\n  BaseGalleryProps,\n  'slideWidth' | 'slideTestId' | 'slideRoleDescription' | 'slideLabel' | 'onChange'\n> &\n  HasRootRef<HTMLElement> &\n  HasChildren & {\n    onStart: (e: CustomTouchEvent) => void;\n    onMoveX: (e: CustomTouchEvent) => void;\n    onEnd: (e: CustomTouchEvent) => void;\n    setSlideRef: (slideRef: HTMLDivElement | null, slideIndex: number) => void;\n    layerRef?: React.Ref<HTMLDivElement>;\n    slidesContainerId: string;\n  };\n\nconst defaultSlideLabel = (index: number, slidesCount: number) => `${index + 1} из ${slidesCount}`;\n\nexport const CarouselViewPort = ({\n  slideTestId,\n  slideWidth,\n  slideLabel = defaultSlideLabel,\n  slideRoleDescription = 'Слайд',\n  onChange,\n  onStart,\n  onMoveX,\n  onEnd,\n  getRootRef,\n  layerRef,\n  children,\n  setSlideRef,\n  slidesContainerId,\n}: GalleryViewPortProps) => {\n  const slidesCount = React.Children.count(children);\n\n  const onSlideFocus = React.useCallback(\n    (e: React.FocusEvent<HTMLDivElement>) => onChange?.(Number(e.currentTarget.dataset.index)),\n    [onChange],\n  );\n\n  return (\n    <Touch\n      className={styles.viewport}\n      onStartX={onStart}\n      onMoveX={onMoveX}\n      onEnd={onEnd}\n      style={{ width: slideWidth === 'custom' ? '100%' : slideWidth }}\n      noSlideClick\n      getRootRef={getRootRef}\n    >\n      <div className={styles.layer} ref={layerRef} id={slidesContainerId}>\n        {React.Children.map(children, (item: React.ReactNode, i: number) => (\n          <div\n            role=\"group\"\n            aria-roledescription={slideRoleDescription}\n            aria-label={typeof slideLabel === 'function' ? slideLabel(i, slidesCount) : slideLabel}\n            className={styles.slide}\n            key={`slide-${i}`}\n            data-testid={slideTestId?.(i)}\n            ref={(el) => setSlideRef(el, i)}\n            data-index={i}\n            tabIndex={0}\n            onFocus={onSlideFocus}\n          >\n            {item}\n          </div>\n        ))}\n      </div>\n    </Touch>\n  );\n};\n"],"names":["React","Touch","defaultSlideLabel","index","slidesCount","CarouselViewPort","slideTestId","slideWidth","slideLabel","slideRoleDescription","onChange","onStart","onMoveX","onEnd","getRootRef","layerRef","children","setSlideRef","slidesContainerId","Children","count","onSlideFocus","useCallback","e","Number","currentTarget","dataset","className","onStartX","style","width","noSlideClick","div","ref","id","map","item","i","role","aria-roledescription","aria-label","data-testid","el","data-index","tabIndex","onFocus"],"mappings":"AAAA;;AACA,sCAAsC,GAEtC,YAAYA,WAAW,QAAQ;AAE/B,SAAgCC,KAAK,QAAQ,oBAAiB;AAkB9D,MAAMC,oBAAoB,CAACC,OAAeC,cAAwB,GAAGD,QAAQ,EAAE,IAAI,EAAEC,aAAa;AAElG,OAAO,MAAMC,mBAAmB,CAAC,EAC/BC,WAAW,EACXC,UAAU,EACVC,aAAaN,iBAAiB,EAC9BO,uBAAuB,OAAO,EAC9BC,QAAQ,EACRC,OAAO,EACPC,OAAO,EACPC,KAAK,EACLC,UAAU,EACVC,QAAQ,EACRC,QAAQ,EACRC,WAAW,EACXC,iBAAiB,EACI;IACrB,MAAMd,cAAcJ,MAAMmB,QAAQ,CAACC,KAAK,CAACJ;IAEzC,MAAMK,eAAerB,MAAMsB,WAAW,CACpC,CAACC,IAAwCb,qBAAAA,+BAAAA,SAAWc,OAAOD,EAAEE,aAAa,CAACC,OAAO,CAACvB,KAAK,IACxF;QAACO;KAAS;IAGZ,qBACE,KAACT;QACC0B,SAAS;QACTC,UAAUjB;QACVC,SAASA;QACTC,OAAOA;QACPgB,OAAO;YAAEC,OAAOvB,eAAe,WAAW,SAASA;QAAW;QAC9DwB,YAAY;QACZjB,YAAYA;kBAEZ,cAAA,KAACkB;YAAIL,SAAS;YAAgBM,KAAKlB;YAAUmB,IAAIhB;sBAC9ClB,MAAMmB,QAAQ,CAACgB,GAAG,CAACnB,UAAU,CAACoB,MAAuBC,kBACpD,KAACL;oBACCM,MAAK;oBACLC,wBAAsB9B;oBACtB+B,cAAY,OAAOhC,eAAe,aAAaA,WAAW6B,GAAGjC,eAAeI;oBAC5EmB,SAAS;oBAETc,aAAW,EAAEnC,wBAAAA,kCAAAA,YAAc+B;oBAC3BJ,KAAK,CAACS,KAAOzB,YAAYyB,IAAIL;oBAC7BM,cAAYN;oBACZO,UAAU;oBACVC,SAASxB;8BAERe;mBAPI,CAAC,MAAM,EAAEC,GAAG;;;AAa7B,EAAE"}