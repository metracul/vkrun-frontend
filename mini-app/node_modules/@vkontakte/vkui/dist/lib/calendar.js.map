{"version":3,"sources":["../../src/lib/calendar.ts"],"sourcesContent":["import { isSameDate } from '@vkontakte/vkjs';\nimport { clamp as clampNumber } from '../helpers/math';\nimport { Keys, type KeysValues } from './accessibility';\nimport {\n  addDays,\n  addMonths,\n  addWeeks,\n  eachDayOfInterval,\n  endOfMonth,\n  endOfWeek,\n  isLastDayOfMonth,\n  MONDAY,\n  startOfMonth,\n  startOfWeek,\n  subDays,\n  subMonths,\n  subWeeks,\n} from './date';\n\nexport const DEFAULT_MAX_YEAR = 9999;\n// 100 - из-за ограничений dayjs https://github.com/iamkun/dayjs/issues/2591\nexport const DEFAULT_MIN_YEAR = 100;\n\nexport const getYears = (\n  currentYear: number,\n  range: number,\n): Array<{\n  value: number;\n  label: string;\n}> => {\n  const years: Array<{\n    value: number;\n    label: string;\n  }> = [];\n\n  const minYear = clampNumber(currentYear - range, DEFAULT_MIN_YEAR, DEFAULT_MAX_YEAR);\n  const maxYear = clampNumber(currentYear + range, DEFAULT_MIN_YEAR, DEFAULT_MAX_YEAR);\n\n  for (let i = minYear; i <= maxYear; i++) {\n    years.push({ label: String(i).padStart(4, '0'), value: i });\n  }\n\n  return years;\n};\n\nexport const getMonths = (\n  locale?: string,\n): Array<{\n  value: number;\n  label: string;\n}> => {\n  const months: Array<{\n    value: number;\n    label: string;\n  }> = [];\n  const formatter = new Intl.DateTimeFormat(locale, {\n    month: 'long',\n  });\n\n  for (let i = 0; i < 12; i++) {\n    months.push({\n      label: formatter.format(new Date(2023, i, 15)),\n      value: i,\n    });\n  }\n\n  return months;\n};\n\nexport const getDaysNames = (\n  now: Date,\n  weekStartsOn: 0 | 1 | 2 | 3 | 4 | 5 | 6,\n  locale?: string,\n): Array<{ short: string; long: string }> => {\n  const shortFormatter = new Intl.DateTimeFormat(locale, {\n    weekday: 'short',\n  });\n  const longFormatter = new Intl.DateTimeFormat(locale, {\n    weekday: 'long',\n  });\n  return eachDayOfInterval(\n    startOfWeek(now, { weekStartsOn }),\n    endOfWeek(now, { weekStartsOn }),\n  ).map((day) => ({ short: shortFormatter.format(day), long: longFormatter.format(day) }));\n};\n\nexport const NAVIGATION_KEYS: KeysValues[] = [\n  Keys.ARROW_UP,\n  Keys.ARROW_DOWN,\n  Keys.ARROW_LEFT,\n  Keys.ARROW_RIGHT,\n  Keys.HOME,\n  Keys.END,\n  Keys.PAGE_UP,\n  Keys.PAGE_DOWN,\n];\n\nexport const navigateDate = (date?: Date | null, key?: (typeof NAVIGATION_KEYS)[number]): Date => {\n  let newDate = date ?? new Date();\n\n  switch (key) {\n    case Keys.ARROW_RIGHT:\n      newDate = addDays(newDate, 1);\n      break;\n    case Keys.ARROW_LEFT:\n      newDate = subDays(newDate, 1);\n      break;\n    case Keys.ARROW_UP:\n      newDate = subWeeks(newDate, 1);\n      break;\n    case Keys.ARROW_DOWN:\n      newDate = addWeeks(newDate, 1);\n      break;\n    case Keys.HOME:\n      newDate = startOfWeek(newDate, { weekStartsOn: MONDAY });\n      break;\n    case Keys.END:\n      newDate = endOfWeek(newDate, { weekStartsOn: MONDAY });\n      break;\n    case Keys.PAGE_UP:\n      newDate = subMonths(newDate, 1);\n      break;\n    case Keys.PAGE_DOWN:\n      newDate = addMonths(newDate, 1);\n      break;\n  }\n\n  return newDate;\n};\n\nexport const getWeeks = (viewDate: Date, weekStartsOn: 0 | 1 | 2 | 3 | 4 | 5 | 6): Date[][] => {\n  const start = startOfWeek(startOfMonth(viewDate), { weekStartsOn });\n  const end = endOfWeek(endOfMonth(viewDate), { weekStartsOn });\n\n  let count = 0;\n  let current = start;\n  const nestedWeeks: Date[][] = [];\n  let lastDay = null;\n  while (current < end) {\n    const weekNumber = Math.floor(count / 7);\n    nestedWeeks[weekNumber] = nestedWeeks[weekNumber] || [];\n    const day = current.getDay();\n    if (lastDay !== day) {\n      lastDay = day;\n      nestedWeeks[weekNumber].push(current);\n      count += 1;\n    }\n    current = addDays(current, 1);\n  }\n  return nestedWeeks;\n};\n\nexport const setTimeEqual = (to: Date, from?: Date | null): Date => {\n  if (from) {\n    to.setHours(from.getHours());\n    to.setMinutes(from.getMinutes());\n    to.setSeconds(from.getSeconds());\n    to.setMilliseconds(from.getMilliseconds());\n  }\n\n  return to;\n};\n\nexport const isFirstDay = (day: Date, dayOfWeek: number): boolean =>\n  dayOfWeek === 0 || day.getDate() === 1;\n\nexport const isLastDay = (day: Date, dayOfWeek: number): boolean =>\n  dayOfWeek === 6 || isLastDayOfMonth(day);\n\n/**\n * Возвращает дату, ограниченную `min` и/или `max` значениями\n */\nexport function clamp(day: Date, options: { min?: Date; max?: Date } = {}): Date {\n  const { min, max } = options;\n  if (min && day < min) {\n    return min;\n  }\n  if (max && day > max) {\n    return max;\n  }\n  return day;\n}\n\n/**\n * Позволяет определить удовлетворяет ли исходная дата заданным ограничения `min` и/или `max`\n */\nexport function isDayMinMaxRestricted(\n  day: Date,\n  options: { min?: Date; max?: Date; withTime?: boolean } = {},\n): boolean {\n  const { min, max, withTime = false } = options;\n  if (!withTime && ((min && isSameDate(day, min)) || (max && isSameDate(day, max)))) {\n    return false;\n  }\n  return Boolean((min && day < min) || (max && day > max));\n}\n"],"names":["isSameDate","clamp","clampNumber","Keys","addDays","addMonths","addWeeks","eachDayOfInterval","endOfMonth","endOfWeek","isLastDayOfMonth","MONDAY","startOfMonth","startOfWeek","subDays","subMonths","subWeeks","DEFAULT_MAX_YEAR","DEFAULT_MIN_YEAR","getYears","currentYear","range","years","minYear","maxYear","i","push","label","String","padStart","value","getMonths","locale","months","formatter","Intl","DateTimeFormat","month","format","Date","getDaysNames","now","weekStartsOn","shortFormatter","weekday","longFormatter","map","day","short","long","NAVIGATION_KEYS","ARROW_UP","ARROW_DOWN","ARROW_LEFT","ARROW_RIGHT","HOME","END","PAGE_UP","PAGE_DOWN","navigateDate","date","key","newDate","getWeeks","viewDate","start","end","count","current","nestedWeeks","lastDay","weekNumber","Math","floor","getDay","setTimeEqual","to","from","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setMilliseconds","getMilliseconds","isFirstDay","dayOfWeek","getDate","isLastDay","options","min","max","isDayMinMaxRestricted","withTime","Boolean"],"mappings":"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"}