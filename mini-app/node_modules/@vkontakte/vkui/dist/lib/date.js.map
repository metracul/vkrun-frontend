{"version":3,"sources":["../../src/lib/date.ts"],"sourcesContent":["import { isSameDate } from '@vkontakte/vkjs';\nimport { TZDateMini } from '@vkontakte/vkui-date-fns-tz';\n\nexport function parse(input: string, format: string, referenceDate: Date = new Date()): Date {\n  const match2 = /^\\d\\d/; // 00 - 99\n  const match4 = /^\\d{4}/; // 0000 - 9999\n\n  const entries: Array<[string, RegExp, (val: string) => [string, number, boolean]]> = [\n    ['yyyy', match4, (val) => ['Y', +val, true]],\n    [\n      'MM',\n      match2,\n      (val) => {\n        const numVal = +val;\n        const okay = numVal > 0 && numVal <= 12;\n\n        return ['M', numVal - 1, okay];\n      },\n    ],\n    ['dd', match2, (val) => ['D', +val, true]],\n    [\n      'HH',\n      match2,\n      (val) => {\n        const numVal = parseInt(val, 10);\n        const okay = numVal >= 0 && numVal < 24;\n\n        return ['h', numVal, okay];\n      },\n    ],\n    [\n      'mm',\n      match2,\n      (val) => {\n        const numVal = parseInt(val, 10);\n        const okay = numVal >= 0 && numVal < 60;\n\n        return ['m', numVal, okay];\n      },\n    ],\n  ];\n\n  const superRegExp = new RegExp(entries.map((item) => item[0]).join('|'), 'g');\n\n  const store: {\n    [key: string]: number;\n  } = {\n    y: referenceDate.getFullYear(),\n    M: referenceDate.getMonth(),\n    d: referenceDate.getDate(),\n    h: referenceDate.getHours(),\n    m: referenceDate.getMinutes(),\n    s: referenceDate.getSeconds(),\n    ms: referenceDate.getMilliseconds(),\n  };\n\n  let prevInputIndex = 0;\n  let lastNonFormatting = '';\n  let lastFormatIndex = 0;\n  let found = false;\n\n  while (true) {\n    const match = superRegExp.exec(format);\n\n    if (!match) {\n      break;\n    }\n\n    const length = match[0].length;\n    const atIndex = superRegExp.lastIndex - length;\n\n    const item = entries.find((item) => item[0] === match[0])!;\n\n    lastNonFormatting = format.slice(lastFormatIndex, atIndex);\n    lastFormatIndex = superRegExp.lastIndex;\n\n    if (\n      input.slice(prevInputIndex, prevInputIndex + lastNonFormatting.length) !== lastNonFormatting\n    ) {\n      return new Date('');\n    }\n\n    const value = input.slice(prevInputIndex + lastNonFormatting.length).match(item[1]);\n\n    if (!value) {\n      return new Date('');\n    }\n\n    prevInputIndex = prevInputIndex + lastNonFormatting.length + value[0].length;\n\n    const [key, newValue, okay] = item[2](value[0]);\n\n    if (!okay) {\n      return new Date('');\n    }\n\n    store[key] = newValue;\n    found = true;\n  }\n\n  if (!found) {\n    return new Date('');\n  }\n\n  const date = new Date(store.Y, store.M, store.D, store.h, store.m, store.s, store.ms);\n\n  // Since days of months are dynamic, they can't be validated in entries,\n  // so we check it here, in the finalized date\n  if (date.getMonth() !== store.M || date.getDate() !== store.D) {\n    return new Date('');\n  }\n\n  return date;\n}\n\nexport const convertDateToTimeZone = (\n  date?: Date | null,\n  timezone?: string,\n): Date | undefined | null => {\n  if (!timezone) {\n    return date;\n  }\n  if (date === null) {\n    return null;\n  }\n  return date ? TZDateMini.tz(timezone, date) : undefined;\n};\n\nexport const convertDateFromTimeZone = (\n  date?: Date | null,\n  timezone?: string,\n): Date | undefined | null => {\n  if (!timezone) {\n    return date;\n  }\n  if (date === null) {\n    return null;\n  }\n  // eslint-disable-next-line new-cap\n  const systemTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  return date ? TZDateMini.tz(systemTimezone, date) : undefined;\n};\n\nconst dateOptions: Intl.DateTimeFormatOptions = {\n  day: '2-digit',\n  month: '2-digit',\n  year: 'numeric',\n};\n\n// dd.MM.yyyy\nexport const dateFormatter = /*#__PURE__*/ new Intl.DateTimeFormat('ru-RU', dateOptions);\n\nclass DateTimeFormat extends Intl.DateTimeFormat {\n  constructor() {\n    super('ru-RU', {\n      ...dateOptions,\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  }\n\n  format(date?: Date | number): string {\n    return super.format(date).replace(',', '');\n  }\n}\n\n// dd.MM.yyyy HH:mm\nexport const dateTimeFormatter = /*#__PURE__*/ new DateTimeFormat();\n\n/**\n * Возвращает дату начала месяца\n */\nexport function startOfMonth(date: Date): Date {\n  const result = new Date(date);\n  result.setDate(1);\n  result.setHours(0, 0, 0, 0);\n  return result;\n}\n\n/**\n * Возвращает дату конца месяца\n */\nexport function endOfMonth(date: Date): Date {\n  const result = new Date(date);\n  const month = result.getMonth();\n  result.setFullYear(result.getFullYear(), month + 1, 0);\n  result.setHours(23, 59, 59, 999);\n  return result;\n}\n\ntype WeekOptions = { weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6 };\n\nexport const MONDAY = 1;\n\n/**\n * Возвращает дату начала недели\n */\nexport function startOfWeek(date: Date, { weekStartsOn = MONDAY }: WeekOptions = {}): Date {\n  const result = new Date(date);\n  const day = result.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  result.setDate(result.getDate() - diff);\n  result.setHours(0, 0, 0, 0);\n  return result;\n}\n\n/**\n * Возвращает дату конца недели\n */\nexport function endOfWeek(date: Date, { weekStartsOn = MONDAY }: WeekOptions = {}): Date {\n  const result = new Date(date);\n  const day = result.getDay();\n  const diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n\n  result.setDate(result.getDate() + diff);\n  result.setHours(23, 59, 59, 999);\n  return result;\n}\n\n/**\n * Возвращает дату начала дня\n */\nexport function startOfDay(date: Date): Date {\n  const result = new Date(date);\n  result.setHours(0, 0, 0, 0);\n  return result;\n}\n\n/**\n * Возвращает дату конца дня\n */\nexport function endOfDay(date: Date): Date {\n  const result = new Date(date);\n  result.setHours(23, 59, 59, 999);\n  return result;\n}\n\nexport function startOfTomorrow() {\n  const date = new Date();\n  const day = date.getDate();\n\n  date.setDate(day + 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}\n\n/**\n * Возвращает дату начала минуты\n */\nexport function startOfMinute(date: Date): Date {\n  const result = new Date(date);\n  result.setSeconds(0, 0);\n  return result;\n}\n\nexport function eachDayOfInterval(\n  startDate: Date,\n  endDate: Date,\n  { step = 1 }: { step?: number } = {},\n): Date[] {\n  let reversed = +startDate > +endDate;\n  const endTime = reversed ? +startDate : +endDate;\n  const date = new Date(reversed ? endDate : startDate);\n  date.setHours(0, 0, 0, 0);\n\n  if (!step) {\n    return [];\n  }\n  if (step < 0) {\n    step = -step;\n    reversed = !reversed;\n  }\n\n  const dates = [];\n\n  while (+date <= endTime) {\n    dates.push(new Date(date));\n    date.setDate(date.getDate() + 1);\n    date.setHours(0, 0, 0, 0);\n  }\n\n  return reversed ? dates.reverse() : dates;\n}\n\n/**\n * Проверяет, что переданные даты относятся к одному и тому же месяцу\n *\n * @example\n * ```ts\n * import assert from 'node:assert';\n * import { isSameMonth } from './date.ts';\n *\n * const d1 = new Date();\n * const d2 = new Date();\n * assert.ok(isSameMonth(d1, d2));\n * ```\n */\nexport function isSameMonth(d1: Date, d2: Date): boolean {\n  return d1.getMonth() === d2.getMonth() && d1.getFullYear() === d2.getFullYear();\n}\n\nexport function isLastDayOfMonth(date: Date) {\n  return +endOfDay(date) === +endOfMonth(date);\n}\n\nexport function isWithinInterval(date: Date, interval: [Date, Date]) {\n  const [startTime, endTime] = interval.sort((a, b) => +a - +b);\n\n  return date >= startTime && date <= endTime;\n}\n\nexport function isToday(date: Date) {\n  return isSameDate(date, new Date());\n}\n\nexport function isYesterday(date: Date) {\n  const yesterday = new Date();\n  yesterday.setDate(yesterday.getDate() - 1);\n\n  return isSameDate(date, yesterday);\n}\n\nexport function isMatch(input: string, format: string): boolean {\n  return !isNaN(+parse(input, format));\n}\n\nexport const millisecondsInSecond = 1000;\n\nexport function addDays(date: Date, amount: number): Date {\n  const result = new Date(date);\n\n  if (!amount) {\n    return result;\n  }\n\n  result.setDate(result.getDate() + amount);\n  return result;\n}\n\nexport function subDays(date: Date, amount: number): Date {\n  return addDays(date, -amount);\n}\n\nexport function addWeeks(date: Date, amount: number): Date {\n  return addDays(date, amount * 7);\n}\n\nexport function subWeeks(date: Date, amount: number): Date {\n  return addWeeks(date, -amount);\n}\n\nexport function addMonths(date: Date, amount: number): Date {\n  const result = new Date(date);\n\n  if (!amount) {\n    return result;\n  }\n\n  const dayOfMonth = result.getDate();\n\n  const endOfDesiredMonth = new Date(date);\n  endOfDesiredMonth.setMonth(result.getMonth() + amount + 1, 0); // Конец месяца\n  const daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // Если мы уже находимся в конце месяца, то это нужная дата\n    return endOfDesiredMonth;\n  }\n\n  result.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n  return result;\n}\n\nexport function subMonths(date: Date, amount: number): Date {\n  return addMonths(date, -amount);\n}\n\nexport function setYear(date: Date, year: number): Date {\n  const result = new Date(date);\n  result.setFullYear(year);\n  return result;\n}\n\nfunction getDaysInMonth(date: Date): number {\n  const result = new Date(date);\n  const lastDayOfMonth = new Date(result);\n  lastDayOfMonth.setFullYear(result.getFullYear(), result.getMonth() + 1, 0);\n  lastDayOfMonth.setHours(0, 0, 0, 0);\n  return lastDayOfMonth.getDate();\n}\n\nexport function setMonth(date: Date, month: number): Date {\n  const result = new Date(date);\n  const year = result.getFullYear();\n  const day = result.getDate();\n\n  const midMonth = new Date(date);\n  midMonth.setFullYear(year, month, 15);\n  midMonth.setHours(0, 0, 0, 0);\n  const daysInMonth = getDaysInMonth(midMonth);\n\n  result.setMonth(month, Math.min(day, daysInMonth));\n  return result;\n}\n\nexport function setHours(date: Date, hours: number): Date {\n  const result = new Date(date);\n  result.setHours(hours);\n  return result;\n}\n\nexport function setMinutes(date: Date, minutes: number): Date {\n  const result = new Date(date);\n  result.setMinutes(minutes);\n  return result;\n}\n"],"names":["isSameDate","TZDateMini","parse","input","format","referenceDate","Date","match2","match4","entries","val","numVal","okay","parseInt","superRegExp","RegExp","map","item","join","store","y","getFullYear","M","getMonth","d","getDate","h","getHours","m","getMinutes","s","getSeconds","ms","getMilliseconds","prevInputIndex","lastNonFormatting","lastFormatIndex","found","match","exec","length","atIndex","lastIndex","find","slice","value","key","newValue","date","Y","D","convertDateToTimeZone","timezone","tz","undefined","convertDateFromTimeZone","systemTimezone","Intl","DateTimeFormat","resolvedOptions","timeZone","dateOptions","day","month","year","dateFormatter","replace","hour","minute","dateTimeFormatter","startOfMonth","result","setDate","setHours","endOfMonth","setFullYear","MONDAY","startOfWeek","weekStartsOn","getDay","diff","endOfWeek","startOfDay","endOfDay","startOfTomorrow","startOfMinute","setSeconds","eachDayOfInterval","startDate","endDate","step","reversed","endTime","dates","push","reverse","isSameMonth","d1","d2","isLastDayOfMonth","isWithinInterval","interval","startTime","sort","a","b","isToday","isYesterday","yesterday","isMatch","isNaN","millisecondsInSecond","addDays","amount","subDays","addWeeks","subWeeks","addMonths","dayOfMonth","endOfDesiredMonth","setMonth","daysInMonth","subMonths","setYear","getDaysInMonth","lastDayOfMonth","midMonth","Math","min","hours","setMinutes","minutes"],"mappings":"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"}